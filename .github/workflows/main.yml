name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Restore packages
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"

      - name: Restore packages
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

  docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        name: Check out code

      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: iqfx/password-usermanagement
          tags: latest
          registry: docker.io
          dockerfile: password-usermanagement/Dockerfile
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout code

      - name: Generate kube configuration
        run: |
          mkdir ~/.kube
          touch ~/.kube/config
          echo "${{ secrets.K8S_CONF }}" >> ~/.kube/config

      - name: Create secrets
        run: |
          kubectl delete secret dockerhub-secret-usermanagement --ignore-not-found
          kubectl delete secret connectionstring-usermanagement --ignore-not-found
          kubectl delete secret rabbitmq-password-usermanagement --ignore-not-found
          kubectl delete secret rabbitmq-username-usermanagement --ignore-not-found
          kubectl delete secret rabbitmq-uri-usermanagement --ignore-not-found
          kubectl create secret docker-registry dockerhub-secret-usermanagement --docker-username=${{ secrets.DOCKER_HUB_USERNAME}} --docker-password=${{ secrets.DOCKER_HUB_ACCESS_TOKEN}}
          kubectl create secret generic rabbitmq-password-usermanagement --from-literal=password=${{ secrets.RABBITMQ__PASSWORD }}
          kubectl create secret generic rabbitmq-username-usermanagement --from-literal=username=${{ secrets.RABBIQMQ__USERNAME }}
          kubectl create secret generic rabbitmq-uri-usermanagement --from-literal=uri=${{ secrets.RABBITMQ__URI }}
          kubectl create secret generic connectionstring-usermanagement --from-literal=connectionstring='${{ secrets.PASSWORDS__CONNECTIONSTRING }}'

      - name: Deploy application
        run: kubectl apply -f ./password-usermanagement/kubernetes/deployment.yml

      - name: Restart deployment
        run: kubectl rollout restart deploy password-app
